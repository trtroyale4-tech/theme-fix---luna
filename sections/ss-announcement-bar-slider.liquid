{% comment %}
---------------------------------------------------------
Copyright Â© 2023 Section Store. All rights reserved.
Unauthorized copying, modification, distribution, or use
of this code or any portion of it, is strictly prohibited.
Violators will be prosecuted to the fullest extent of the law.
For inquiries or permissions, contact daniel@section.store
---------------------------------------------------------
{% endcomment %}

<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
/>

{%- liquid 
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign full_width = section.settings.full_width
  assign content_width = section.settings.content_width

  assign slider_view = section.settings.slider_view
  assign slider_view_mobile = section.settings.slider_view_mobile
  assign slider_gap = section.settings.slider_gap
  assign slider_gap_mobile = section.settings.slider_gap_mobile

  assign autoplay = section.settings.autoplay
  assign autoplay_sec = section.settings.autoplay_sec

  assign slide_border_thickness = section.settings.slide_border_thickness
  assign slide_border_color = section.settings.slide_border_color

  assign text_size = section.settings.text_size
  assign text_size_mobile = section.settings.text_size_mobile
  assign text_color = section.settings.text_color
  assign text_custom = section.settings.text_custom
  assign text_font = section.settings.text_font
  assign text_height = section.settings.text_height

  assign icon_size_mobile = section.settings.icon_size_mobile
  assign icon_size = section.settings.icon_size
  assign icon_margin_right = section.settings.icon_margin_right

  assign arrow_size = section.settings.arrow_size
  assign arrow_size_mobile = section.settings.arrow_size_mobile
  assign arrow_icon_size = section.settings.arrow_icon_size
  assign arrow_icon_size_mobile = section.settings.arrow_icon_size_mobile
  assign arrow_color = section.settings.arrow_color
  assign arrow_hover_color = section.settings.arrow_hover_color
  assign arrow_bg_color = section.settings.arrow_bg_color
  assign arrow_bg_hover_color = section.settings.arrow_bg_hover_color
  assign arrow_border_thickness = section.settings.arrow_border_thickness
  assign arrow_border_color = section.settings.arrow_border_color
  assign arrow_border_hover_color = section.settings.arrow_border_hover_color
  assign arrow_show_desktop = section.settings.arrow_show_desktop
  assign arrow_show_mobile = section.settings.arrow_show_mobile

  assign slider_view_tablet = slider_view | times: 0.5 | round: 0
-%}

{%- style -%}

  {{ text_font | font_face: font_display: 'swap' }}
  
  .section-{{ section.id }} {
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
  }
  
  .section-{{ section.id }}-settings {
    position: relative;
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
  }

  .announcement-slider-{{ section.id }} .swiper-wrapper {
    align-items: stretch !important;
  }

  .announcement-slide-{{ section.id }} {
    padding: 0px 10px;
    display: flex !important;
    align-items: center;
    gap: {{ icon_margin_right | times: 0.75 | round: 0 }}px;
    justify-content: center;
    height: auto !important;
    text-align: center;
    cursor: pointer;
    box-sizing: border-box !important;
    position: relative;
  }

  .announcement-text-{{ section.id }} * {
    margin: 0px;
    font-size: {{ text_size_mobile }}px;
    color: {{ text_color }};
    line-height: {{ text_height }}%;
    text-transform: unset;
    text-decoration: none;
  }

  .announcement-icon-{{ section.id }} {
    flex: 0 0 {{ icon_size_mobile }}px;
  }

  .announcement-icon-{{ section.id }} img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .announcement-btn-prev-{{ section.id }},
  .announcement-btn-next-{{ section.id }} {
    position: absolute;
    z-index: 2;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    align-items: center;
    justify-content: center;
    width: {{ arrow_size_mobile }}px;
    height: {{ arrow_size_mobile }}px;
    border: {{ arrow_border_thickness }}px solid {{ arrow_border_color }};
    border-radius: 50%;
    background-color: transparent;
    background: {{ arrow_bg_color }};
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease 0s;
    cursor: pointer;
    -webkit-appearance: none;
  }

  .announcement-btn-prev-{{ section.id }} {
    left: 0px !important;
  }

  .announcement-btn-next-{{ section.id }} {
    right: 0px !important;
  }

  .announcement-btn-prev-{{ section.id }} svg,
  .announcement-btn-next-{{ section.id }} svg {
    height: {{ arrow_icon_size_mobile }}px;
    flex: 0 0 {{ arrow_icon_size_mobile }}px;
  }

  .announcement-btn-next-{{ section.id }} svg {
    transform: rotate(270deg);
    margin-left: 2px;
  }

  .announcement-btn-prev-{{ section.id }} svg {
    transform: rotate(90deg);
    margin-left: -2px;
  }

  .announcement-btn-prev-{{ section.id }} svg path,
  .announcement-btn-next-{{ section.id }} svg path {
    fill: {{ arrow_color }};
    transition: all 0.3s ease 0s;
  }

  .announcement-btn-prev-{{ section.id }}:hover ,
  .announcement-btn-next-{{ section.id }}:hover {
    transition: all 0.3s ease 0s;
    border: {{ arrow_border_thickness }}px solid {{ arrow_border_hover_color }};
    background: {{ arrow_bg_hover_color }};
  }

  .announcement-btn-prev-{{ section.id }}:hover svg path,
  .announcement-btn-next-{{ section.id }}:hover svg path {
    fill: {{ arrow_hover_color }};
    transition: all 0.3s ease 0s;
  }

  .announcement-btn-prev-{{ section.id }}.swiper-button-disabled,
  .announcement-btn-next-{{ section.id }}.swiper-button-disabled {
    opacity: 0;
    transition: all 0.3s ease 0s;
  }

  .announcement-slide-{{ section.id }}:not(:first-child).swiper-slide-active:before {
    display: none;
  }

  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
    }
    
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }

    .announcement-slide-{{ section.id }} {
      gap: {{ icon_margin_right }}px;
    }

    .announcement-text-{{ section.id }} * {
      font-size: {{ text_size }}px;
    }

    .announcement-icon-{{ section.id }} {
      flex: 0 0 {{ icon_size }}px;
    }

    .announcement-btn-prev-{{ section.id }},
    .announcement-btn-next-{{ section.id }} {
      flex: 0 0 {{ arrow_size }}px;
      height: {{ arrow_size }}px;
    }

    .announcement-btn-prev-{{ section.id }} {
      left: {{ arrow_size | times: 0.5 }}px !important;
    }
  
    .announcement-btn-next-{{ section.id }} {
      right: {{ arrow_size | times: 0.5 }}px !important;
    }

    .announcement-btn-prev-{{ section.id }} svg,
    .announcement-btn-next-{{ section.id }} svg {
      height: {{ arrow_icon_size }}px;
      width: {{ arrow_icon_size }}px;
    }
  }
  
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ content_width }}rem;
    }
  </style>
{% endunless %}

{% if text_custom %}
  <style>
    .announcement-text-{{ section.id }} * {
      font-family: {{ text_font.family }}, {{ text_font.fallback_families }};
      font-weight: {{ text_font.weight }};
      font-style: {{ text_font.style }};
    }
  </style>
{% endif %}

{% if arrow_show_mobile %}
  <style>
    .announcement-btn-prev-{{ section.id }},
    .announcement-btn-next-{{ section.id }} {
      display: flex;
    }
  </style>
{% else %}
  <style>
    .announcement-btn-prev-{{ section.id }},
    .announcement-btn-next-{{ section.id }} {
      display: none;
    }
  </style>
{% endif %}

{% if arrow_show_desktop %}
  <style>
    @media(min-width: 1024px) {
      .announcement-btn-prev-{{ section.id }},
      .announcement-btn-next-{{ section.id }} {
        display: flex;
      }
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
      .announcement-btn-prev-{{ section.id }},
      .announcement-btn-next-{{ section.id }} {
        display: none;
      }
    }
  </style>
{% endif %}

{% if slider_view_mobile > 1 and section.blocks.size > 1 %}
  <style>
    .announcement-slide-{{ section.id }}:not(:first-child):before {
      content: '';
      display: block;
      position: absolute;
      left: 0px;
      top: 0;
      height: 100%;
      width: {{ slide_border_thickness }}px;
      background-color: {{ slide_border_color }};
    } 
  </style>
{% endif %}

{% if slider_view_tablet > 1 and section.blocks.size > 1 %}
  <style>
    @media(min-width: 768px) {
      .announcement-slide-{{ section.id }}:not(:first-child):before  {
        content: '';
        display: block;
        position: absolute;
        left: 0px;
        top: 0;
        height: 100%;
        width: {{ slide_border_thickness }}px;
        background-color: {{ slide_border_color }};
      } 
    }
  </style>
{% else %}
  <style>
    @media(min-width: 768px) {
      .announcement-slide-{{ section.id }}:not(:first-child):before  {
        display: none;
      } 
    }
  </style>
{% endif %}

{% if slider_view > 1 and section.blocks.size > 1 %}
  <style>
    @media(min-width: 1024px) {
      .announcement-slide-{{ section.id }}:not(:first-child):before  {
        content: '';
        display: block;
        position: absolute;
        left: 0px;
        top: 0;
        height: 100%;
        width: {{ slide_border_thickness }}px;
        background-color: {{ slide_border_color }};
      } 
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
      .announcement-slide-{{ section.id }}:not(:first-child):before  {
        display: none;
      } 
    }
  </style>
{% endif %}

{% comment %} PREVIEW {% endcomment %}

<style>
  .announcement-slider-{{ section.id }}.preview .swiper-wrapper {
    display: flex;
    flex-wrap: nowrap;
    gap: {{ slider_gap_mobile }}px;
    overflow: hidden;
  }

  .announcement-slider-{{ section.id }}.preview .swiper-slide {
    flex: 0 0 calc(100% / {{slider_view_mobile}});
  }

  @media(min-width: 768px) {
    .announcement-slider-{{ section.id }}.preview .swiper-slide {
      flex: 0 0 calc(100% / {{slider_view | times: 0.5 | round: 0 }});
    }
  }

   @media(min-width: 1024px) {
    .announcement-slider-{{ section.id }}.preview .swiper-wrapper {
      gap: {{ slider_gap }}px;
    }

    .announcement-slider-{{ section.id }}.preview .swiper-slide {
      flex: 0 0 calc(100% / {{slider_view }});
    }
  }
</style>

<script>
  window.addEventListener('DOMContentLoaded', (event) => {
    let cssTarget = '{{ section.settings.insert_css_class_target }}';
    let productForm = cssTarget
      ? document.querySelector(cssTarget)
      : document.querySelector('#ss-announcement-slider');

    if (!productForm) return;

    const templateContent = document.querySelector(
      '#ss-announcement-slider-{{ section.id }}'
    ).content;

    productForm.insertAdjacentElement(
      'beforebegin',
      templateContent.firstElementChild
    );

  });
</script>


<template id="ss-announcement-slider-{{ section.id }}">
  <div class="section-{{ section.id }} announcement-{{ section.id }}" style="background-color:{{ background_color }}; background-image: {{ background_gradient }};">
    <div class="section-{{ section.id }}-settings">
      <div class="announcement-slider-{{ section.id }} swiper preview">
        <div class="swiper-wrapper">
          {% for block in section.blocks %}
            <div class="announcement-slide-{{ section.id }} swiper-slide">
              {% if block.settings.icon != blank %}
                <div class="announcement-icon-{{ section.id }}">
                  <img src="{{ block.settings.icon | image_url }}" alt="{{ block.settings.icon.alt }}" {% if lazy %}loading="lazy"{% endif %}>
                </div>
              {% endif %}
              <div class="announcement-text-{{ section.id }}">
                {{ block.settings.text }}
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
      <button class="announcement-btn-prev-{{ section.id }}">
        <svg width="16" height="9" viewBox="0 0 16 9" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" class="svelte-1dofwfm use-transition right"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 1.38462L14.5455 0L8 6.23077L1.45455 0L0 1.38462L8 9L16 1.38462Z" fill="currentColor"></path></svg>
      </button>
      <button class="announcement-btn-next-{{ section.id }}">
        <svg width="16" height="9" viewBox="0 0 16 9" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" class="svelte-1dofwfm use-transition right"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 1.38462L14.5455 0L8 6.23077L1.45455 0L0 1.38462L8 9L16 1.38462Z" fill="currentColor"></path></svg>
      </button>
    </div>
  </div>
</template>

<div id="ss-announcement-slider"></div>

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<script>
  function initAnnouncementBarSlider() {
    setTimeout(() => {
      document.querySelector('.announcement-slider-{{ section.id }}').classList.remove('preview');
      const slider = new Swiper('.announcement-slider-{{ section.id }}', {
        speed: 300,
        loop: true,
        breakpoints: {
          320: {
            spaceBetween: {{ slider_gap_mobile }},
            slidesPerView: {{ slider_view_mobile }}
          },
          768: {
            spaceBetween: {{ slider_gap_mobile }},
            slidesPerView: {{ slider_view | times: 0.5 | round: 0 }}
          },
          1024: {
            spaceBetween: {{ slider_gap }},
            slidesPerView: {{ slider_view }}
          }
        },
        navigation: {
          nextEl: '.announcement-btn-next-{{ section.id }}',
          prevEl: '.announcement-btn-prev-{{ section.id }}'
        },
        {% if autoplay %}
        autoplay: {
          delay: {{ autoplay_sec }}000,
          disableOnInteraction: false,
          autoplayDisableOnInteraction: false
        }
        {% endif %}
      })
    }, 300)
  }

  document.addEventListener('DOMContentLoaded', initAnnouncementBarSlider);
  
  if (Shopify.designMode) {
     document.addEventListener('shopify:section:unload', initAnnouncementBarSlider);
     document.addEventListener('shopify:section:load', initAnnouncementBarSlider);
  }
</script>

{% schema %}
  {
    "name": "SS - Announcement Slider",
    "settings": [
      {
        "type": "header",
        "content":"Save settings to see section in action"
      },
      {
        "type": "text",
        "id": "insert_css_class_target",
        "label": "Target CSS Class",
        "default": ".header, .pageheader, .section-header, #announcement, .toolbar, .header__wrapper, .onboarding-header",
        "placeholder": ".header, .pageheader",
        "info": "The default location for the announcement bar is above the header. To display it elsewhere, empty the text field and drag section to desired location & save."
      },
      {
        "type": "header",
        "content": "Slider Settings"
      },
      {
        "type": "range",
        "id": "slider_view",
        "min": 1,
        "max": 6,
        "step": 1,
        "label": "Slider Per View",
        "default": 1
      },
      {
        "type": "range",
        "id": "slider_view_mobile",
        "min": 1,
        "max": 3,
        "step": 1,
        "label": "Slider Per View - Mobile",
        "default": 1
      },
      {
        "type": "range",
        "id": "slider_gap",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Slider Gap",
        "default": 0
      },
      {
        "type": "range",
        "id": "slider_gap_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Slider Gap - Mobile",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "autoplay",
        "label": "Autoplay Slide",
        "default": false
      },
      {
        "type": "range",
        "id": "autoplay_sec",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "s",
        "label": "Autoplay Delay Time",
        "default": 5
      },
      {
        "type": "header",
        "content": "Slide Settings"
      },
      {
        "type": "range",
        "id": "slide_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Border Thickness Between Slides",
        "default": 1
      },
      {
        "type": "header",
        "content": "Text Settings"
      },
      {
        "type": "checkbox",
        "id": "text_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "text_font",
        "label": "Text Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "text_size",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Text Size",
        "default": 12
      },
      {
        "type": "range",
        "id": "text_size_mobile",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Text Size - Mobile",
        "default": 12
      },
      {
        "type": "range",
        "id": "text_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Text Line Height",
        "default": 130
      },
      {
        "type": "header",
        "content": "Icon Settings"
      },
      {
        "type": "range",
        "id": "icon_size",
        "min": 30,
        "max": 120,
        "step": 2,
        "unit": "px",
        "label": "Icon Size",
        "default": 50
      },
      {
        "type": "range",
        "id": "icon_size_mobile",
        "min": 30,
        "max": 120,
        "step": 2,
        "unit": "px",
        "label": "Icon Size - Mobile",
        "default": 50
      },
      {
        "type": "range",
        "id": "icon_margin_right",
        "min": 0,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Icon Margin Right",
        "default": 10
      },
      {
        "type": "header",
        "content": "Arrow Settings"
      },
      {
        "type": "range",
        "id": "arrow_size",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Arrow Size",
        "default": 50
      },
      {
        "type": "range",
        "id": "arrow_size_mobile",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Arrow Size - Mobile",
        "default": 36
      },
      {
        "type": "range",
        "id": "arrow_icon_size",
        "min": 10,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Arrow Icon Size",
        "default": 16
      },
      {
        "type": "range",
        "id": "arrow_icon_size_mobile",
        "min": 10,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Arrow Icon Size - Mobile",
        "default": 14
      },
      {
        "type": "range",
        "id": "arrow_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Arrow Border Thickness",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "arrow_show_desktop",
        "label": "Show on Desktop",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "arrow_show_mobile",
        "label": "Show on Mobile",
        "default": true
      },
      {
        "type": "header",
        "content": "Arrow Colors"
      },
      {
        "type": "color",
        "label": "Arrow color",
        "id": "arrow_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Arrow Hover color",
        "id": "arrow_hover_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Arrow Background color",
        "id": "arrow_bg_color"
      },
      {
        "type": "color",
        "label": "Arrow Background Hover color",
        "id": "arrow_bg_hover_color"
      },
      {
        "type": "color",
        "label": "Arrow Border color",
        "id": "arrow_border_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Arrow Border Hover color",
        "id": "arrow_border_hover_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Slide Colors"
      },
      {
        "type": "color",
        "label": "Border Color Between Slides",
        "id": "slide_border_color",
        "default": "#1A1B18"
      },
      {
        "type": "color",
        "label": "Text Color",
        "id": "text_color",
        "default": "#1A1B18"
      },
      {
        "type": "header",
        "content": "Section Colors"
      },
      {
        "type": "color",
        "label": "Section background",
        "id": "background_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Section background gradient"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section margin (outside)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin top",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin bottom",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section padding (inside)"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding top",
        "default": 16
      },
      {
         "type": "range",
         "id": "padding_bottom",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Padding bottom",
         "default": 16
      },
      {
        "type": "range",
        "id": "padding_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Padding sides",
        "default": 0
      },
      {
        "type": "range",
        "id": "padding_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Padding sides mobile",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section Settings"
      },
      {
        "type": "checkbox",
        "id": "full_width",
        "label": "Full Width",
        "default": true
      },
      {
        "type": "range",
        "id": "content_width",
        "min": 0,
        "max": 400,
        "step": 10,
        "unit": "rem",
        "label": "Section content width",
        "default": 120
      },
      {
        "type": "range",
        "id": "border_thickness",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      }
    ],
    "blocks": [
      {
        "type": "slide",
        "name": "Slide",
        "settings": [
          {
            "type": "image_picker",
            "id": "icon",
            "label": "Icon"
          },
          {
            "type": "richtext",
            "id": "text",
            "label": "Text",
            "default": "<p>Text</p>"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "SS - Announcement Bar Slider",
        "blocks": [
          {
            "type": "slide",
            "settings": {
              "text": "<p>Free shipping on $80+ order (Canada & US) ð¦</p>"
            }
          },
          {
            "type": "slide",
            "settings": {
              "text": "<p>Free gift with every $130+ & $180+ order* ð</p>"
            }
          },
          {
            "type": "slide",
            "settings": {
              "text": "<p>2% of our sales are donated to SOS Miss Dolittle ð¦«</p>"
            }
          }
        ]
      }
    ]
  }
{% endschema %}