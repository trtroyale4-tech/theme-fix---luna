{% comment %}
  Â© Sections Pro. You are free to use this section in your store. You may not redistribute this section in another Shopify app.
{% endcomment %}
<style>

  {% if section.settings.override_fonts %}
    {{ section.settings.text_font | font_face }}
    {{ section.settings.cite_font | font_face }}
  {% endif %}

  @keyframes slpProgressBar {
    0% { width: 0; }
    100% { width: 100%; }
  }

    #sp-review-slider-{{ section.id }}.sp-review-slider-wrap p {
      font-size: {{ section.settings.text_size }}px;
      {% if section.settings.override_fonts %}
        font-family: {{ section.settings.text_font.family }}, {{ section.settings.text_font.fallback_families }};
        font-weight: {{ section.settings.text_font.weight }};
      {% endif %}
      {% if section.settings.text_line_height != 'inherit' %}line-height: {{ section.settings.text_line_height }};{% endif %}
      color: {{ section.settings.text_color }};
    }

    #sp-review-slider-{{ section.id }}.sp-review-slider-wrap p cite {
      font-size: {{ section.settings.cite_size }}px;
      {% if section.settings.override_fonts %}
        font-family: {{ section.settings.cite_font.family }}, {{ section.settings.cite_font.fallback_families }};
        font-weight: {{ section.settings.cite_font.weight }};
      {% endif %}
      {% if section.settings.cite_line_height != 'inherit' %}line-height: {{ section.settings.cite_line_height }};{% endif %}
      color: {{ section.settings.cite_color }};
    }

    #sp-review-slider-{{ section.id }}.sp-review-slider-wrap {
      background-image: {{section.settings.background_color}};
    }
    
    #sp-review-slider-{{ section.id }} .sp-review-slider {
      position: relative;
      margin: 0 auto;
      max-width: {{ section.settings.max_width }}px;
      padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px;
    }
  
    #sp-review-slider-{{ section.id }} .sp-review-slider p {
      text-align: center;
      max-width: 1000px;
      margin: 0 auto 25px auto;
      padding: 0;
    }
  
    #sp-review-slider-{{ section.id }} .sp-review-slider .sp-review-slider-grid {
      position: relative;
      margin: 0 auto;
      display: block;
      max-width: 1000px;
    }
  
    #sp-review-slider-{{ section.id }} .sp-review-slider .sp-review-slider-col * {
      text-align: center;
    }
  
    #sp-review-slider-{{ section.id }} .sp-review-slider-quote svg, 
    #sp-review-slider-{{ section.id }} .sp-review-slider-quote svg g {
        fill: {{ section.settings.highlight_color }};
    }
  
    #sp-review-slider-{{ section.id }} .sp-review-slider .sp-review-slider-col .sp-review-slider-quote p {
        padding: 0 50px 10px 50px;
        margin: 0;
        font-style: none;
    }
  
    #sp-review-slider-{{ section.id }} .sp-review-slider .sp-review-slider-col .sp-review-slider-quote p cite {
        display: block;
        font-style: normal;
    }

    /* slideshow */
    #sp-review-slider-{{ section.id }} .sp-carousel {
      display: grid;
      grid-auto-columns: 100%;
      grid-auto-flow: column;
      width: 100%;
      overflow-x: scroll;
      scroll-snap-type: x mandatory;
      border-radius: {{ section.settings.media_radius }}px;
      {% if section.settings.media_shadow %}box-shadow: 0 0 5px 0 rgba(0,0,0,0.20);{% endif %}
      margin: 0;
      padding: 0;
    }
  
    #sp-review-slider-{{ section.id }} .sp-carousel::-webkit-scrollbar { 
      display: none;  /* Safari and Chrome */
    }
  
    #sp-review-slider-{{ section.id }} .sp-carousel .sp-slide {
      scroll-snap-align: start;
      position: relative;
    }
  
    #sp-review-slider-{{ section.id }} .sp-slide {
        position: relative;
        width: 100%;
    }
  
    /* snap links */
    #sp-review-slider-{{ section.id }} .sp-snap-links {
      display: block;
      width: 100%;
      padding: 0 10px;
      margin: 0;
      text-align: center;
  }

  #sp-review-slider-{{ section.id }} .sp-snap-links a {
      display: inline-block;
      background-color: {{ section.settings.indicator_color }};
      width: 12px;
      height: 12px;
      border-radius: 50%;
      text-indent: -9999px;
      padding: 0;
      margin: 0 2.5px;
      cursor: pointer;
      opacity: 0.25;
  }

  #sp-review-slider-{{ section.id }} .sp-snap-links a:hover {
      {{ section.settings.indicator_color }};
      opacity:1;
  }

  #sp-review-slider-{{ section.id }} .sp-snap-links a[active] {
      {{ section.settings.indicator_color }};
    opacity:1;
  }

  #sp-review-slider-{{ section.id }}[autoplaying] #sp-snap-links-{{ section.id }} a[active] {
    background: {{ section.settings.progress_background_color }};
    opacity: 1;
    width: 25px;
    transition: all .5s;
    border-radius: 10px;
    overflow: hidden;
  }

  #sp-review-slider-{{ section.id }}[autoplaying] #sp-snap-links-{{ section.id }} a[active]>span {
    display: block;
    background: {{ section.settings.progress_foreground_color }};
    height: 100%;
    animation: slpProgressBar {{ section.settings.autoplay_time }}ms ease-in-out;
    animation-fill-mode: both;
  }
  </style>
  
  <div id="sp-review-slider-{{ section.id }}" class="sp-review-slider-wrap" sp-wrap>
  
    <div class="sp-review-slider" sp-container>
  
    <div class="sp-review-slider-grid">
      <div class="sp-review-slider-col">
  
        <div id="sp-carousel-{{ section.id }}" class="sp-carousel">
          {% for block in section.blocks %}
            <div class="sp-review-slider-quote sp-slide" data-index="{{ forloop.index | minus: 1 }}">
              <p><?xml version="1.0" encoding="UTF-8"?>
  <svg width="101px" height="20px" viewBox="0 0 101 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
      <title>Group 5</title>
      <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
          <g id="Group-5">
              <polygon points="10 15 4.12214748 18.0901699 5.24471742 11.545085 0.489434837 6.90983006 7.06107374 5.95491503 10 0 12.9389263 5.95491503 19.5105652 6.90983006 14.7552826 11.545085 15.8778525 18.0901699"></polygon>
              <polygon points="30.5 15 24.6221475 18.0901699 25.7447174 11.545085 20.9894348 6.90983006 27.5610737 5.95491503 30.5 0 33.4389263 5.95491503 40.0105652 6.90983006 35.2552826 11.545085 36.3778525 18.0901699"></polygon>
              <polygon points="50 15 44.1221475 18.0901699 45.2447174 11.545085 40.4894348 6.90983006 47.0610737 5.95491503 50 0 52.9389263 5.95491503 59.5105652 6.90983006 54.7552826 11.545085 55.8778525 18.0901699"></polygon>
              <polygon points="70.5 15 64.6221475 18.0901699 65.7447174 11.545085 60.9894348 6.90983006 67.5610737 5.95491503 70.5 0 73.4389263 5.95491503 80.0105652 6.90983006 75.2552826 11.545085 76.3778525 18.0901699"></polygon>
              <polygon points="90.5 15 84.6221475 18.0901699 85.7447174 11.545085 80.9894348 6.90983006 87.5610737 5.95491503 90.5 0 93.4389263 5.95491503 100.010565 6.90983006 95.2552826 11.545085 96.3778525 18.0901699"></polygon>
          </g>
      </g>
  </svg></p>
              <p>{{block.settings.quote}}</p>
              <p><cite>&ndash; {{block.settings.cite}}</cite></p>
            </div>
          {% endfor %}
        </div>
        <!-- /.sp-review-slider-carousel -->
  
        <div id="sp-snap-links-{{ section.id }}" class="sp-snap-links">
          {% for block in section.blocks %}
            <a data-index="{{ forloop.index | minus: 1 }}"><span></span></a>
          {% endfor %}
        </div>
  
      </div>
      <!-- /.sp-review-slider-col -->
    </div>
    <!-- /.sp-review-slider-container -->
  
    </div>
    <!-- /.sp-review-slider -->
    
  </div>
  <!-- /.sp-review-slider-wrap -->

  <script>

    // create new Sections Pro slideshow
    class SpSlideShow_{{ short_id }} {
  
      constructor(section, carousel, enable_autoplay, autoplay_time, slides, links) {
  
        console.log(`[spslideshow] setup`);      
  
        this.section = section;
        this.carousel = carousel;
        this.slides = slides;
        this.links = links;
        this.index = 0;
        this.interval = null;
        this.observer = null;
        this.direction = 'up';
        this.autoplay_time = autoplay_time;
        this.autoplay_is_setup = false;
  
        // enable autoplay
        if(enable_autoplay) {
          console.log(`[spslideshow] enable auotplay`);  
          this.setupAutoplayObserver();
          this.setupClearEvents();
        }
  
        // setup links and observer
        this.setupLinks();
        this.setupObserver();
      }
  
      // don't start autoplay until the slideshow is visible
      setupAutoplayObserver() {
        var context = this;
  
        // use intersection observer to render dots
        this.observer = new IntersectionObserver(function(entries, observer) {
  
          // Loop over the entries
          entries.forEach(entry => {
            // If the element is visible
            if (entry.isIntersecting) {
              if(context.autoplay_is_setup == false) {
                context.setupAutoplay();
                context.autoplay_is_setup = true;
              }
            }
          });
  
        }, {
          threshold: 0.5
        });
  
        for (var i = 0; i < this.slides.length; i++) {
          this.observer.observe(this.carousel);
        }
      }
  
      // setup autoplay
      setupAutoplay() {
  
        var autoplay_time = this.autoplay_time;
  
        console.log(`[spslideshow] setup autoplay time = ${autoplay_time}`);  
  
        var context = this;
        context.section.setAttribute('autoplaying', '');
  
        this.interval = setInterval(function() {
  
          // handle next
          if(context.direction == 'up') context.index++;
          else context.index--;
  
          // rewind
          if(context.index == context.slides.length) {
            context.direction = 'down';
            context.index-=2;
          }
          else if(context.index < 0) {
            context.direction = 'up';
            context.index+=2;
          }
  
          // get slide
          var slide = context.slides[context.index];
  
          if(slide) {
            context.carousel.scroll({
              behavior: 'smooth',
              left: slide.offsetLeft
            });
          }
          else {
            clearInterval(context.interval);
          }
  
        }, autoplay_time);
      }
  
      // setup events
      setupClearEvents() {
        var context = this;
  
        this.carousel.addEventListener('mousedown', (e) => {
          context.clearInterval();
        });
  
        this.carousel.addEventListener('touchstart', (e) => {
          context.clearInterval();
        });
      }
  
      // cancel the interval timer
      clearInterval() {
        if(this.interval) clearInterval(this.interval);
        this.section.removeAttribute('autoplaying');
      }
  
      // setup navigation links
      setupLinks() {
  
        var context = this;
  
        for(var x=0; x<this.links.length; x++) {
  
          // handle click of links
          this.links[x].addEventListener('click', (e) => {
  
              // clear interval
              context.clearInterval();
  
              var index = parseInt(e.target.getAttribute(`data-index`));
              var slide = null;
  
              for(x=0; x<context.slides.length; x++) {
                var i = parseInt(context.slides[x].getAttribute('data-index')) || 0;
                if(i==index) slide = context.slides[x];
              }
  
              if(slide) {
                context.carousel.scroll({
                  behavior: 'smooth',
                  left: slide.offsetLeft
                });
              }
  
              e.preventDefault();
          });
        }
  
      }
  
      // set active link
      setActiveLink(index) {
        for(var y=0; y<this.links.length; y++) this.links[y].removeAttribute('active');
  
        // set all active
        for(var y=0; y<this.links.length; y++) {
          if(this.links[y].hasAttribute('data-index')) {
            var i = parseInt(this.links[y].getAttribute('data-index'));
            if(i == index) this.links[y].setAttribute('active', '');
          }
        }
  
      }
  
      // setup observer
      setupObserver() {
  
        var context = this;
  
        // use intersection observer to render dots
        this.observer = new IntersectionObserver(function(entries, observer) {
  
          // Loop over the entries
          entries.forEach(entry => {
            // If the element is visible
            if (entry.isIntersecting) {
              var index = parseInt(entry.target.getAttribute('data-index')) || 0;
              context.setActiveLink(index);
            }
          });
  
        }, {
          root: context.carousel, threshold: 0.5
        });
  
        for (var i = 0; i < this.slides.length; i++) {
          this.observer.observe(this.slides[i]);
        }
  
      }
  
    }
    // end SpSlideShow class
    
    var section_{{ short_id }} = document.querySelector('#sp-review-slider-{{ section.id }}');
    var carousel_{{ short_id }} = document.querySelector(`#sp-carousel-{{ section.id }}`);
    var slides_{{ short_id }} = section_{{ short_id }}.querySelectorAll('.sp-slide');
    var links_{{ short_id }} = section_{{ short_id }}.querySelectorAll('.sp-snap-links a');
    
    new SpSlideShow_{{ short_id }}(section_{{ short_id }}, carousel_{{ short_id }}, {{ section.settings.enable_autoplay }}, {{ section.settings.autoplay_time }}, slides_{{ short_id }}, links_{{ short_id }});
    
  </script>
  
  <script>
    var el = document.querySelector(`#sp-carousel-{{ section.id }}`);
    var menu = document.querySelector(`#sp-carousel-links-{{ section.id }}`);
    var interval;
    var autoplay = 5000;
    
  </script>
  
  {% schema %}
    {
      "name": "ðSP - Review Slider",
      "settings": [
        {
          "type": "header",
          "content": "Font",
          "info": "Set the fonts for your section"
        },
        {
          "type": "checkbox",
          "id": "override_fonts",
          "label": "Override theme fonts",
          "default": false
        },
        {
          "type": "font_picker",
          "id": "cite_font",
          "label": "Cite Font",
          "default": "sans-serif"
        },
        {
          "type": "font_picker",
          "id": "text_font",
          "label": "Text Font",
          "default": "sans-serif"
        },
        {
          "type": "header",
          "content": "Text",
          "info": "Set the text for your section"
        },
        {
          "type": "range",
          "id": "text_size",
          "min": 10,
          "max": 50,
          "step": 1,
          "unit": "px",
          "label": "Text Size",
          "default": 15
        },
        {
          "type": "select",
          "id": "text_line_height",
          "label": "Text Line Height",
          "options": [
            {
              "value": "0.75",
              "label": "0.75"
            },
            {
              "value": "1.0",
              "label": "1.0"
            },
            {
              "value": "1.1",
              "label": "1.1"
            },
            {
              "value": "1.2",
              "label": "1.2"
            },
            {
              "value": "1.3",
              "label": "1.3"
            },
            {
              "value": "1.4",
              "label": "1.4"
            },
            {
              "value": "1.5",
              "label": "1.5"
            },
            {
              "value": "1.6",
              "label": "1.6"
            },
            {
              "value": "1.7",
              "label": "1.7"
            },
            {
              "value": "1.8",
              "label": "1.8"
            },
            {
              "value": "1.9",
              "label": "1.9"
            },
            {
              "value": "2.0",
              "label": "2.0"
            },
            {
              "value": "inherit",
              "label": "Inherit"
            }
          ],
          "default": "1.5"
        },
        {
          "type": "color",
          "id": "text_color",
          "default": "#111",
          "label": "Text Color"
        },
        {
          "type": "range",
          "id": "cite_size",
          "min": 10,
          "max": 50,
          "step": 1,
          "unit": "px",
          "label": "Cite Size",
          "default": 13
        },
        {
          "type": "select",
          "id": "cite_line_height",
          "label": "Cite Line Height",
          "options": [
            {
              "value": "0.75",
              "label": "0.75"
            },
            {
              "value": "1.0",
              "label": "1.0"
            },
            {
              "value": "1.1",
              "label": "1.1"
            },
            {
              "value": "1.2",
              "label": "1.2"
            },
            {
              "value": "1.3",
              "label": "1.3"
            },
            {
              "value": "1.4",
              "label": "1.4"
            },
            {
              "value": "1.5",
              "label": "1.5"
            },
            {
              "value": "1.6",
              "label": "1.6"
            },
            {
              "value": "1.7",
              "label": "1.7"
            },
            {
              "value": "1.8",
              "label": "1.8"
            },
            {
              "value": "1.9",
              "label": "1.9"
            },
            {
              "value": "2.0",
              "label": "2.0"
            },
            {
              "value": "inherit",
              "label": "Inherit"
            }
          ],
          "default": "inherit"
        },
        {
          "type": "color",
          "id": "cite_color",
          "default": "#111",
          "label": "Cite Color"
        },
        {
          "type": "header",
          "content": "Colors",
          "info": "Set colors for the section."
        },
        {
          "type": "color_background",
          "id": "background_color",
          "default": "linear-gradient(46deg, rgba(242, 255, 237, 1) 24%, rgba(254, 245, 246, 1) 50%, rgba(229, 241, 251, 1) 69%)",
          "label": "Background Color"
        },
        {
          "type": "color",
          "id": "highlight_color",
          "default": "#111",
          "label": "Highlight Color"
        },
        {
          "type": "color_background",
          "id": "progress_background_color",
          "default": "linear-gradient(177deg, rgba(17, 17, 17, .25) 3%, rgba(17, 17, 17, 0.25) 100%)",
          "label": "Progress Background Color"
        },
        {
          "type": "color_background",
          "id": "progress_foreground_color",
          "default": "linear-gradient(177deg, rgba(17, 17, 17, 1) 3%, rgba(17, 17, 17, 1) 100%)",
          "label": "Progress Foreground Color"
        },
        {
          "type": "color",
          "id": "indicator_color",
          "default": "#111",
          "label": "Indicator Color"
        },
        {
          "type": "header",
          "content": "Dimensions",
          "info": "Set the section dimensions in pixels."
        },
        {
          "type": "number",
          "id": "max_width",
          "default": 1000,
          "label": "Max Width of Section"
        },
        {
          "type": "number",
          "id": "padding_top",
          "default": 25,
          "label": "Padding Top"
        },
        {
          "type": "number",
          "id": "padding_bottom",
          "default": 25,
          "label": "Padding Bottom"
        },
        {
          "type": "number",
          "id": "padding_left",
          "default": 10,
          "label": "Padding Left"
        },
        {
          "type": "number",
          "id": "padding_right",
          "default": 10,
          "label": "Padding Right"
        },
        {
          "type": "header",
          "content": "Slideshow",
          "info": "Set settings for your slideshow"
        },
        {
          "type": "checkbox",
          "id": "enable_autoplay",
          "default": true,
          "label": "Enable Autoplay?"
        },
        {
          "type": "select",
          "id": "autoplay_time",
          "label": "Autoplay Time",
          "options": [
            {
              "value": "10000",
              "label": "Slowest (10s)"
            },
            {
              "value": "7500",
              "label": "Slower (7.5s)"
            },
            {
              "value": "5000",
              "label": "Normal (5s)"
            },
            {
              "value": "3000",
              "label": "Faster (3s)"
            },
            {
              "value": "2000",
              "label": "Fastest (2s)"
            }
          ],
          "default": "5000"
        }
        
      ],
      "blocks": [
        {
         "name": "Quote",
         "type": "quote",
         "settings": [
            {
            "type": "inline_richtext",
            "id": "quote",
            "label": "Quote",
            "default": "This is a placeholder for your reviews and testimonials. Use this space to highlight your favorite reviews or testimonials."
            },
            {
            "type": "inline_richtext",
            "id": "cite",
            "label": "Cite",
            "default": "Sample Reviewer"
            }
         ]
        }
      ],
      "presets": [
        {
          "name": "ðSP - Review Slider",
          "blocks": [
            {
              "type": "quote"
            },
            {
              "type": "quote"
            },
            {
              "type": "quote"
            }
          ]
        }
      ]
    }
  {% endschema %}